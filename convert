#!/usr/bin/python

##
# Author: Caleb Adams
# Github: github.com/piepieninja
# Converts the VisualSFM .nvm file type into the
# OpenSFM .json type
#

import sys
import json

inputFile = ""
outputFile = ""

expectValue = False
expectCameras = False
expectPoints = False
expectMeasurements = False
nvmVersion = ""
cameras = 0
points = 0
measurements = 0

cameraFileList = []
pointsXYZList = []
pointsRGBList = []
imageIndexList = []

converted_json = []

if (len(sys.argv) > 1):
    inputFile = sys.argv[1]
else:
    print "USAGE: \n> ./convert input.nvm\n> ./convert input.nvm output.json"
    sys.exit(0)

# read in the file!
with open(inputFile) as f:
    for line in f:
        #print line
        if (nvmVersion == ""): # assumes the file starts with the nvm version
            nvmVersion = line.rstrip('\n')
        elif (line == '\n'):
            expectValue = True
            expectCameras = False
            expectPoints = False
            expectMeasurements = False
        elif (cameras == 0 and expectValue):
            expectValue = False
            expectCameras = True
            cameras = int(line)
        elif (expectCameras): # Do all camera stuff here
            cameraFileList.append(line[0:line.find(' ')]) # get each camera file location and store it
        elif (points == 0 and expectValue):
            expectValue = False
            expectPoints = True
            points = int(line)
        elif (expectPoints): # Do all point stuff here
            xyz_list = [0.0,0.0,0.0]
            rgb_list = [0.0,0.0,0.0]
            for x in range(0,6):
                p = line.find(' ')
                temp = float(line[0:p])
                line = line[p+1:]
                if (x < 3):
                    xyz_list[x] = temp
                else:
                    rgb_list[x-3] = int(temp)
            pointsXYZList.append(xyz_list)
            pointsRGBList.append(rgb_list)
        elif (measurements == 0 and expectValue):
            expectValue = False
            expectMeasurements = True
            measurements = int(line)
        elif (expectMeasurements):
            imageIndexList.append(line[0:line.find(' ')])

print "============================>"
print "Version: " + nvmVersion + "\nCameras: " + str(cameras) + "\nCamera File List: " + str(cameraFileList) + "\nPoints: " + str(points) + "\nXYZ List: " + str(pointsXYZList) + "\nRGB List: " + str(pointsRGBList) + "\nMeasurements: " + str(measurements) + "\nImage Index List: " + str(imageIndexList)
print "============================>"

# build json here:

cameras_json = []
shots_json = []
points_json = []

    

for x in range(0,points):
    str_x = "\"" + str(x) + "\": "
    points_json.append(str_x + str({"color": pointsRGBList[x], "reprojection_error": 0.0, "coordinates": pointsXYZList[x]}))
points_str = str(points_json)[2:len(str(points_json)) - 2]
points_str = points_str.replace("\'\"", "\"")
points_str = points_str.replace("\\\'", "\"")
points_str = points_str.replace("}\',", "},\n")
points_str = "\"points\": {\n" + points_str + "\n}"

print "json: \n" + points_str
